/* Grid */

$grid-sizes: ( // name: width
  col1: 8.3333,
  col2: 16.6666,
  col3: 25.0000,
  col4: 33.3333,
  col5: 41.6666,
  col6: 50.0000,
  col7: 58.3333,
  col8: 66.6666,
  col9: 75.0000, 
  col10: 83.3333, 
  col11: 91.6666, 
  col12: 100, 
);

$sc-small: 480px;
$sc-medium: 768px;
$sc-large: 992px;

$grid-screens: ( // screen, include offsets (boolean)
	($sc-small, false),
	($sc-medium, false),
	($sc-medium, true)
);

.container {
  max-width: $container-max;
  width: $container-width;
  margin-left: auto;
  margin-right: auto;
}

%grid-base {
  float: left;
  width: 100%;
}

@each $grid, $width in ($grid-sizes) {
  .#{$grid} {
    @extend %grid-base;
  }
}

.grid-img {
  @extend %grid-base;
}


/* Reverses order of grid for content choreography */
.flip {float: right;}


/* Add columns to grid on bigger screens */
@each $screen, $offset in ($grid-screens){
  @media (min-width: $screen) {
    @each $grid, $width in ($grid-sizes) {
      @if $screen < $sc-medium {
        .#{$grid} {
          @if $width >= 50 {
          width: 100%;
          } @else {
            width: 50%;
          }
        }
      } @else {
        .#{$grid} {
          width: $width + 0%;
        }
      }
    }
    @if $offset {
      @each $grid, $width in ($grid-sizes) {
         .offset-#{$grid} {
          margin-left: $width + 0%;
        }
      }
    }
  }
}

/* Image grid */ 
/*.row-img {
  @media (min-width: $bp-xsmall)  {width: 50%;}
  @media (min-width: $bp-small) {width: 33.33333333333%;}
  @media (min-width: $bp-medium)  {width: 25%;}
}*/

/* Add clearfix */
.container, .row {
  @extend .clearfix;
}